{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ab-Pc\\\\OneDrive\\\\Desktop\\\\Graphdb Project\\\\graphdb-frontend\\\\src\\\\components\\\\DataUploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUploadPage = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [namespace, setNamespace] = useState('');\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('namespace', namespace);\n    try {\n      const response = await axios.post('http://localhost:5000/upload_ttl', formData);\n      alert(response.data.text);\n    } catch (error) {\n      console.error(error);\n      alert('Error uploading TTL file');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Data Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: e => setFile(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: namespace,\n      onChange: e => setNamespace(e.target.value),\n      placeholder: \"Namespace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload TTL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUploadPage, \"k2mCUVTQ3/lLe93E+2Ya9NLBxSw=\");\n_c = DataUploadPage;\nexport default DataUploadPage;\nvar _c;\n$RefreshReg$(_c, \"DataUploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DataUploadPage","_s","file","setFile","namespace","setNamespace","handleUpload","formData","FormData","append","response","post","alert","data","text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","files","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Ab-Pc/OneDrive/Desktop/Graphdb Project/graphdb-frontend/src/components/DataUploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DataUploadPage = () => {\r\n  const [file, setFile] = useState(null);\r\n  const [namespace, setNamespace] = useState('');\r\n\r\n  const handleUpload = async () => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('namespace', namespace);\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/upload_ttl', formData);\r\n      alert(response.data.text);\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error uploading TTL file');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Data Upload</h1>\r\n      <input type=\"file\" onChange={(e) => setFile(e.target.files[0])} />\r\n      <input\r\n        type=\"text\"\r\n        value={namespace}\r\n        onChange={(e) => setNamespace(e.target.value)}\r\n        placeholder=\"Namespace\"\r\n      />\r\n      <button onClick={handleUpload}>Upload TTL</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataUploadPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEP,IAAI,CAAC;IAC7BK,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEL,SAAS,CAAC;IACvC,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,CAAC;MAC/EK,KAAK,CAACF,QAAQ,CAACG,IAAI,CAACC,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBH,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACEb,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAOuB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKrB,OAAO,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClEtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXK,KAAK,EAAEvB,SAAU;MACjBmB,QAAQ,EAAGC,CAAC,IAAKnB,YAAY,CAACmB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE;MAC9CC,WAAW,EAAC;IAAW;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFtB,OAAA;MAAQ8B,OAAO,EAAEvB,YAAa;MAAAW,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9BID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}